---
import { DoomText } from 'astro-doom-text';
import { type Fonts } from 'astro-doom-text';

const fonts: Fonts[] = ['doom-small', 'doom-bigfont', 'doom-bigupper', 'doom-nightmare', 'heretic-small', 'heretic-menu', 'zdoom-console', 'dn3d-small', 'dn3d-big', 'dn3d-atomic'];
const demoText = ["QUICK BROWN fox", "DA-SH", "UNDER_SCORE", "?!_-.,:", "lowercase", "mIxEd CaSe", "űáőú", "test@example.com", ""];
const scales = [-1, 0, 0.1, 1, 2, 4, 8, 16].reverse();
---
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Doom Text demo page</title>
		<style>
			body {margin: 5% auto; background: #f2f2f2; color: #444444; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; font-size: 16px; line-height: 1.8; text-shadow: 0 1px 0 #ffffff; max-width: 73%;}

			table {
				width: 100%;
				margin: 10px;
			}
			table {
				border: 1px solid #999999;
				margin-bottom: 2em;
			}
			td {
				padding: 0.5em;
			}
			pre {
				margin: 0;
				font-size: 1.5em;
				font-family: ui-monospace,
					Menlo, Monaco,
					"Cascadia Mono", "Segoe UI Mono",
					"Roboto Mono",
					"Oxygen Mono",
					"Ubuntu Mono",
					"Source Code Pro",
					"Fira Mono",
					"Droid Sans Mono",
					"Consolas", "Courier New", monospace;
			}
		</style>
	</head>
	<body>
		<p>
		<DoomText text="Doom Text Astro" scale={ 6 } font='doom-nightmare'/>
		</p>
		<p>
			<DoomText text="demo page" scale={ 2 } font='doom-bigupper'/>
		</p>

			<a href="http://github.com/ijanos/astro-doom-text/">
				<DoomText scale={ 1 } text="link to GitHub project" font="dn3d-big"/>
			</a>
		<h2>Demo</h2>

		{
			scales.map(scale => {
				return <table>
						 <tr><td><pre>{ `<DoomText text="demo text" scale="${ scale }"/>` }</pre></td></tr>
						 <tr><td><DoomText text="demo text" scale={ scale }/></td></tr>
					</table>

			})
		}
		{
			fonts.map(font => {
				return <h2> Font: { font } </h2>
				<div> { demoText.map(text => {
					return <table>
						 <tr><td><pre>{ `<DoomText text="${ text }" font="${ font }"/>` }</pre></td></tr>
						 <tr><td><DoomText text={ text } font={ font }/></td></tr>
					</table>
				}) }
				</div>
			})
		}


	</body>
</html>
